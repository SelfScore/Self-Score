name: Deploy to S3 and Invalidate CloudFront

on:
  push:
    branches:
      - main # Change to your production branch
    paths:
      - 'client/**' # Only trigger on changes in client folder
  workflow_dispatch: # Allows manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Change to your Node version
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ./client

      - name: Build Next.js
        run: npm run build
        working-directory: ./client
        env:
          NODE_ENV: production
          NEXT_PUBLIC_API_URL: ${{ secrets.API_URL }}
          # Add any other environment variables your build needs

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Change to your region

      - name: Sync to S3
        run: |
          aws s3 sync client/out/ s3://${{ secrets.S3_BUCKET_NAME }} \
            --delete \
            --cache-control "public, max-age=31536000, immutable" \
            --exclude "*.html" \
            --exclude "*.json"

          # Upload HTML and JSON files with shorter cache
          aws s3 sync client/out/ s3://${{ secrets.S3_BUCKET_NAME }} \
            --delete \
            --cache-control "public, max-age=0, must-revalidate" \
            --exclude "*" \
            --include "*.html" \
            --include "*.json"

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      - name: Deployment summary
        run: |
          echo "‚úÖ Deployment completed successfully!"
          echo "üì¶ S3 Bucket: ${{ secrets.S3_BUCKET_NAME }}"
          echo "üåê CloudFront Distribution: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}"